name: Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security:
    runs-on: ubuntu-latest
    env:
      FLASK_APP: app.py
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install semgrep requests
          npm install -g snyk

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Run Semgrep (SAST)
        run: semgrep --config="p/ci"security --json --output semgrep-report.json || true

      - name: Run Snyk (SCA)
        run: snyk test --all-projects --json > snyk-report.json || true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Run Gitleaks (Secret scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml
          report-format: json
          report-path: gitleaks-report.json

      - name: Run Trivy Misconfiguration
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: config
          format: json
          output: trivy-misconfig-report.json
          exit-code: 0

      - name: Build and run application
        run: |
          docker-compose up -d
          sleep 15

      - name: Run OWASP ZAP Baseline Scan (DAST)
        uses: zaproxy/action-baseline@v0.8.2
        with:
          target: "http://localhost:5000"
          rules_file_name: ".zap/rules.tsv"
        continue-on-error: true

      - name: Upload all security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            semgrep-report.json
            snyk-report.json
            gitleaks-report.json
            trivy-misconfig-report.json
            zap_scan/*

      - name: Notify Slack if critical vulnerabilities
        run: python scripts/notify_critical.py
